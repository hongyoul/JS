// sort 함수: 배열을 기본 방식으로 오름차순 정렬

let fruits = ["Banana", "Orange", "Apple", "Mango"]; // 숫자, 알파펫
fruits.sort();
console.log(fruits); // [Apple, Banana, Mango, Orange]

var gksrmf = ["구치소","바나나", "오렌지", "궐연", "양파"];
gksrmf.sort();
console.log(gksrmf);

//reverse: 배열을 역순으로 정렬
fruits.reverse();
console.log(fruits); // [Orange, Mango, Banana, Apple]

// 인자: 두수를 비교하는 함수
// sort 함수의 비교함수는 양수, 0, 음수를 반환하며,
// 값에 따라 배열 요소의 순서를 결정.
// 양수가 나오면 위치를 바꿈

let points = [40, 100, 1, 5];
points.sort (
  function (a,b) { // (a = 현재 value), (b = 다음 value)
return a - b; // 앞 숫자가 더 크면 양수

// 계산과정 (정렬이 끝날때까지 여러번 순회)
// 1. 40과 100 비교 -> 40 - 100 = -60 (순서 유지)
// 2. 100과 1 비교 -> 100 - 1 = 99 (순서 변경: 1이 앞으로)
// 3. 100과 5 비교 -> 100 - 5 = 95 (순서 변경: 5가 앞으로)
// 4. 40과 1 비교 -> 40 - 1 = 39 (순서 변경: 1이 앞으로)
// 5. 40과 5 비교 -> 40 - 5 = 35 (순서 변경: 5가 앞으로)

  }
);

console.log(points);

// a - b: 앞 숫자가 더 크면 양수로 오름차순 정렬
// f - e : 뒷 숫자가 더 크면 양수으로 내림차순 정렬
points.sort (
  function (e,f) { // (e = 현재 value), (f = 다음 value)
return f - e;
  }
);
console.log(points);


let points1 = [80,20,-2,46,-42,0];
points1.sort(
  function (c,d) {
    return c - d;
    // 풀이과정
    // [80, 20, -2, 46, -42, 0]
    // 80 - 20 = 60
    // [20, 80, -2, 46, -42, 0]
    // 80 -- 2 = 82
    // [20, -2, 80, 46, -42, 0]
    // 20 -- 2 = 22
    // [ -2, 20, 80, 46, -42, 0]
    // -2 - 20 = -22
    // 20 - 80 = -60
    // 80 - 46 = 34
    // [ -2, 20, 46, 80, -42, 0]
    // -2 - 20 = -22
    // 20 - 46 = -26
    // 46 - 80 = -34
    // 80 -- 42 = 122
    // [ -2, 20, 46, -42, 80, 0]
    // -2 - 20 = -22
    // 20 - 46 = -26
    // 46 -- 42 = 88
    // [ -2, 20, -42, 46, 80, 0]
    // -2 - 20 = -22
    // 20 -- 42 = -62
    // [ -2, -42, 20, 46, 80, 0]
    // -2 -- 42 = 44
    // [ -42, -2, 20, 46, 80, 0]
    // -42 -- 2 = -44
    // -2 - 20 = -22
    // 20 - 46 = -26
    // 46 - 80 = -34
    // 80 - 0 = 80
    // [ -42, -2, 20, 46, 0, 80]
    // -42 -- 2 = -44
    // -2 - 20 = -22
    // 20 - 46 = -26
    // 46 - 0 = 46
    // [ -42, -2, 20, 0, 46, 80]
    // -42 -- 2 = -44
    // -2 - 20 = -22
    // 20 - 0 = 20
    // [ -42, -2, 0, 20, 46, 80]
    // -42 -- 2 = -44
    // -2 - 0 = -2
    // end
  }
);
console.log(points1);

// 객체형 배열
let persons = [
  {
    name: "유재석",
    point: 78,
    city: "서울",
  },
  {
    name: "김종국",
    point: 98,
    city: "서울",
  },
  {
    name: "양세찬",
    point: 76,
    city: "제주",
  },
  {
    name: "하하",
    point: 81,
    city: "서울",
  },
];

// Q.사람의 점수를 비교해서
// 배열을 내림차순으로 정렬하기!
// sort()함수를 사용하세요.

// 1.point를 기준으로 정렬
persons.sort(
  function (a, b) {
    return b.point - a.point;
  }
);
console.log(persons);
